{"ast":null,"code":"import mapboxgl from 'mapbox-gl';\nvar mapElement = document.getElementById('map');\n\nvar initMapbox = function initMapbox() {\n  if (mapElement) {\n    var map = buildMap();\n    var markers = JSON.parse(mapElement.dataset.markers);\n    addMarkersToMap(map, markers);\n    fitMapToMarkers(map, markers);\n  }\n};\n\nvar buildMap = function buildMap() {\n  mapboxgl.accessToken = mapElement.dataset.mapboxApiKey;\n  return new mapboxgl.Map({\n    container: 'map',\n    style: 'mapbox://styles/mapbox/streets-v10'\n  });\n};\n\nvar addMarkersToMap = function addMarkersToMap(map, markers) {\n  markers.forEach(function (marker) {\n    var element = document.createElement('div');\n    element.className = 'marker';\n    element.style.backgroundImage = \"url('\".concat(marker.image_url, \"')\");\n    element.style.backgroundSize = 'contain';\n    element.style.width = '25px';\n    element.style.height = '25px';\n    var popupWrapperStart = \"<div style=\\\"background-image: url('\".concat(marker.image_url, \"'\");\n    var popupWrapperEnd = \"</div>\";\n    var popup = new mapboxgl.Popup().setHTML(marker.infoWindow); // add this\n\n    new mapboxgl.Marker().setLngLat([marker.lng, marker.lat]).setPopup(popup) // add this\n    // .setHTML(`<div style=\"background-image: url('${marker.image_url}')\"></div>`)\n    .addTo(map);\n  });\n};\n\nvar fitMapToMarkers = function fitMapToMarkers(map, markers) {\n  var bounds = new mapboxgl.LngLatBounds();\n  markers.forEach(function (marker) {\n    return bounds.extend([marker.lng, marker.lat]);\n  });\n  map.fitBounds(bounds, {\n    padding: 70,\n    maxZoom: 15\n  });\n};\n\nexport { initMapbox };","map":{"version":3,"sources":["/Users/malcolm/code/malcool/ateliyay/app/javascript/plugins/init_mapbox.js"],"names":["mapboxgl","mapElement","document","getElementById","initMapbox","map","buildMap","markers","JSON","parse","dataset","addMarkersToMap","fitMapToMarkers","accessToken","mapboxApiKey","Map","container","style","forEach","marker","element","createElement","className","backgroundImage","image_url","backgroundSize","width","height","popupWrapperStart","popupWrapperEnd","popup","Popup","setHTML","infoWindow","Marker","setLngLat","lng","lat","setPopup","addTo","bounds","LngLatBounds","extend","fitBounds","padding","maxZoom"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,WAArB;AAEA,IAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAnB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,MAAIH,UAAJ,EAAgB;AACd,QAAMI,GAAG,GAAGC,QAAQ,EAApB;AACA,QAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWR,UAAU,CAACS,OAAX,CAAmBH,OAA9B,CAAhB;AACAI,IAAAA,eAAe,CAACN,GAAD,EAAME,OAAN,CAAf;AACAK,IAAAA,eAAe,CAACP,GAAD,EAAME,OAAN,CAAf;AACD;AACF,CAPD;;AASA,IAAMD,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBN,EAAAA,QAAQ,CAACa,WAAT,GAAuBZ,UAAU,CAACS,OAAX,CAAmBI,YAA1C;AACA,SAAO,IAAId,QAAQ,CAACe,GAAb,CAAiB;AACtBC,IAAAA,SAAS,EAAE,KADW;AAEtBC,IAAAA,KAAK,EAAE;AAFe,GAAjB,CAAP;AAID,CAND;;AAQA,IAAMN,eAAe,GAAG,SAAlBA,eAAkB,CAACN,GAAD,EAAME,OAAN,EAAkB;AACxCA,EAAAA,OAAO,CAACW,OAAR,CAAgB,UAACC,MAAD,EAAY;AAE1B,QAAMC,OAAO,GAAGlB,QAAQ,CAACmB,aAAT,CAAuB,KAAvB,CAAhB;AACAD,IAAAA,OAAO,CAACE,SAAR,GAAoB,QAApB;AACAF,IAAAA,OAAO,CAACH,KAAR,CAAcM,eAAd,kBAAwCJ,MAAM,CAACK,SAA/C;AACAJ,IAAAA,OAAO,CAACH,KAAR,CAAcQ,cAAd,GAA+B,SAA/B;AACAL,IAAAA,OAAO,CAACH,KAAR,CAAcS,KAAd,GAAsB,MAAtB;AACAN,IAAAA,OAAO,CAACH,KAAR,CAAcU,MAAd,GAAuB,MAAvB;AAEA,QAAMC,iBAAiB,iDAAyCT,MAAM,CAACK,SAAhD,MAAvB;AACA,QAAMK,eAAe,WAArB;AACA,QAAMC,KAAK,GAAG,IAAI9B,QAAQ,CAAC+B,KAAb,GAAqBC,OAArB,CAA6Bb,MAAM,CAACc,UAApC,CAAd,CAX0B,CAWqC;;AAE/D,QAAIjC,QAAQ,CAACkC,MAAb,GACGC,SADH,CACa,CAAEhB,MAAM,CAACiB,GAAT,EAAcjB,MAAM,CAACkB,GAArB,CADb,EAEGC,QAFH,CAEYR,KAFZ,EAEmB;AACjB;AAHF,KAIGS,KAJH,CAISlC,GAJT;AAKD,GAlBD;AAmBD,CApBD;;AAsBA,IAAMO,eAAe,GAAG,SAAlBA,eAAkB,CAACP,GAAD,EAAME,OAAN,EAAkB;AACxC,MAAMiC,MAAM,GAAG,IAAIxC,QAAQ,CAACyC,YAAb,EAAf;AACAlC,EAAAA,OAAO,CAACW,OAAR,CAAgB,UAAAC,MAAM;AAAA,WAAIqB,MAAM,CAACE,MAAP,CAAc,CAAEvB,MAAM,CAACiB,GAAT,EAAcjB,MAAM,CAACkB,GAArB,CAAd,CAAJ;AAAA,GAAtB;AACAhC,EAAAA,GAAG,CAACsC,SAAJ,CAAcH,MAAd,EAAsB;AAAEI,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,OAAO,EAAE;AAAxB,GAAtB;AACD,CAJD;;AAMA,SAASzC,UAAT","sourcesContent":["import mapboxgl from 'mapbox-gl';\n\nconst mapElement = document.getElementById('map');\n\nconst initMapbox = () => {\n  if (mapElement) {\n    const map = buildMap();\n    const markers = JSON.parse(mapElement.dataset.markers);\n    addMarkersToMap(map, markers);\n    fitMapToMarkers(map, markers);\n  }\n};\n\nconst buildMap = () => {\n  mapboxgl.accessToken = mapElement.dataset.mapboxApiKey;\n  return new mapboxgl.Map({\n    container: 'map',\n    style: 'mapbox://styles/mapbox/streets-v10'\n  });\n};\n\nconst addMarkersToMap = (map, markers) => {\n  markers.forEach((marker) => {\n\n    const element = document.createElement('div');\n    element.className = 'marker';\n    element.style.backgroundImage = `url('${marker.image_url}')`;\n    element.style.backgroundSize = 'contain';\n    element.style.width = '25px';\n    element.style.height = '25px';\n\n    const popupWrapperStart = `<div style=\"background-image: url('${marker.image_url}'`;\n    const popupWrapperEnd = `</div>`;\n    const popup = new mapboxgl.Popup().setHTML(marker.infoWindow); // add this\n\n    new mapboxgl.Marker()\n      .setLngLat([ marker.lng, marker.lat ])\n      .setPopup(popup) // add this\n      // .setHTML(`<div style=\"background-image: url('${marker.image_url}')\"></div>`)\n      .addTo(map);\n  });\n};\n\nconst fitMapToMarkers = (map, markers) => {\n  const bounds = new mapboxgl.LngLatBounds();\n  markers.forEach(marker => bounds.extend([ marker.lng, marker.lat ]));\n  map.fitBounds(bounds, { padding: 70, maxZoom: 15 });\n};\n\nexport { initMapbox };\n\n\n\n"]},"metadata":{},"sourceType":"module"}